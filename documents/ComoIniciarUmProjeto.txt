Criar uma pasta via prompt: mkdir <nome-da-pasta>

Criar Projeto Node: cd<nome-da-pasta> , npm init -y

Ver arquivos ls

npm i typescript -D : instalar o typescript como depedencia de desenvolvedor 

importar tipos do node e do express: npm i @types/node @types/express -D

Lembrar de remover o type module

Iniciar o typescript no projeto: npx tsc --init


Comando de configurações recomendadas para tsconfig
https://github.com/tsconfig/bases
npm install --save-dev @tsconfig/recommended

Editar tsconfig desse modo
{
"extends": "@tsconfig/recommended/tsconfig.json"
"compilerOptions": {
"rootDir": "src", // TypeScript Code Directory
"outDir": "lib", // Output directory for compiled files
"sourceMap": true, // Generates source maps for easier debugging
"noImplicitAny": true, // Does not allow declaration of variables or parameters without type
"noImplicitReturns": true, // Checks if all functions have a specified return type
"noEmitOnError": true, // Does not generate JS code if there is an error during the compilation process
"strictNullChecks": true, // Forces checking for null or undefined values
"noUnusedLocals": true // Flags when there are declared and unused variables
"compileOnSave": true,
"include": ["src/**/*"],
"exclude": ["**/*.spec.ts"]
}

rodar o arquivo ts: npx tsc 
(para gerar o arquivo js dentro de lib, tambem vai aparecer "<arquivo>.js.map")

gitignore: 
/node_modues 
/lib

Modo assistivo
npm install tsc-watch --save-dev

Usar modo assistivo (mais informaçoes no site npm)
npx tsc-watch --onSuccess "node ./lib/<arquivo>.js"

Adicionar o script star em package.json:
scripts{
"start": "npx tsc-watch --onSuccess \"node ./lib/<arquivo>.js\""
}

Finalmente: npm start